.. title: Новости о Docker
.. slug: Новости-о-docker
.. date: 2015-08-17 10:35:21
.. tags:
.. category:
.. link:
.. description:
.. type: text
.. author: Peter Lemenkov

**Это архивная статья**


Наконец-то в `Docker внедрили верификацию
образов <https://blog.docker.com/2015/08/content-trust-docker-1-8/>`__.

Не так много `и понадобилось
времени </content/Короткие-новости-о-контейнерах-и-виртуализации-1>`__,
кстати. Ни на что не намекая, предположим, что на подходе зависимости
между образами докера, как в RPM.

Помимо этого, в версии 1.8 появилась фича "копировать файл из хоста в
контейнер". Не то, чтобы нас, пользователей контейнеров, управляемых
systemd, и виртуалок, к которым есть libguestfs, это сильно удивило. Нас
больше заинтересовало то, что все эти "новинки" всерьез называются
новинками.

Вообще, пользователи Docker зачастую не очень понимают, что такое
"контейнеры", что такое "докер" и многие другие вещи. Для них
порекомендуем ознакомиться с `короткой тематической
хаутушкой <https://chimeracoder.github.io/docker-without-docker/>`__,
которая может помочь расставить все на свои места. Docker, сам по себе,
это такой "mc" для контейнеров, и некоторые считают, что `как и
mc <http://www.sensi.org/~ak/linuxfaq/rulinux.faq-2.html#ss2.15>`__, так
и в Docker ничего, кроме лишней сущности, нет. Есть даже шуточная (или
не очень?) `попытка реализовать Docker в менее 1000 строчек на
Bash <https://github.com/p8952/bocker>`__. Конечно, одним systemd-nspawn
вместо Docker обойтись не получится - нужно управление сетью, нужны
средства развертывания образов, нужен хотя-бы простейший менеджер задач
в кластере, но и для Docker необходимы дополнительные средства.

Например, `послушайте любопытное выступление Александра Тарасова,
инженера
Альфа-банка <https://habrahabr.ru/company/jugru/blog/264669/>`__:
Какое у вас сложилось впечатление о развитости и интегрированности
компонентов инфраструктуры для Docker?
Вообще, про Docker сейчас интереснее читать не статьи, а читательские
комментарии к ним, `вот
тут <https://habrahabr.ru/company/1cloud/blog/263911/#comment_8521177>`__,
например. Похоже, что мы проходим первый пик `известной
кривой <https://en.wikipedia.org/wiki/Hype_cycle>`__, и пользователи уже
сформировали список желаний. При всем уважении к мнению и опыту `команды
Iron.io с их колоссальными числами реально работающих
контейнеров <https://habrahabr.ru/post/247969/>`__, у Docker есть `хорошо
видимые проблемы <http://sirupsen.com/production-docker/>`__ - особенно
обратите внимание на файловую систему, журналирование и
`безопасность </content/Безопасность-docker-будущее>`__. Мы уверены, что
эти проблемы преодолимы, и не факт что в каких-то реальных конфигурациях
они обязательно вылезут, но в других решениях эти проблемы уже
устранены, и это просто надо знать, прежде чем делать выбор.

К счастью, все контейнерные технологии на самом деле базируются на одних
и тех же существующих механизмах ядра, и унификация инструментов гораздо
выше, чем считают некоторые. Например, развернув контейнер с помощью
Docker вы сможете управлять им из systemd, который `давно уже умеет
напрямую импортировать образы
Docker </content/systemd-теперь-может-импортировать-контейнеры-docker>`__.

Но прогресс прогрессирует прогрессирующе, и Open Container Format, `о
котором вы уже
слышали </content/Великий-Открытый-Контейнерный-Стандарт>`__, скоро
сделает ненужным и экспортирование - все контейнеры будут одинаковыми.

`Пока утрясаются управленческие
моменты <https://blog.docker.com/2015/07/open-container-format-progress-report/>`__,
но уже есть инициативы по стандартизации все больших и больших областей,
например, `сети для контейнеров <https://github.com/appc/cni>`__ (но это
пока секрет!).
Само собой, мы тоже используем Docker сами и помогаем другим.

Пару-тройку недель назад наш коллега, `Dan
Horák <https://fedoraproject.org/wiki/User:Sharkcz>`__, наконец-то
`собрал Docker для архитектуры
s390x <https://plus.google.com/117069299461364056986/posts/UaofiQfaSoL>`__.

Использовался gcc-go, т.к. референсный golang почти никакие
нестандартные архитектуры не поддерживает. Напомним, первые эксперименты
по сборке чего-то реального с gcc-go `начались в апреле
2015го </content/Безопасность-docker-будущее>`__.

