.. title: memfd включили в ядро и другие новости
.. slug: memfd-включили-в-ядро-и-другие-новости
.. date: 2014-08-13 11:23:31
.. tags:
.. category:
.. link:
.. description:
.. type: text
.. author: Peter Lemenkov

**Это архивная статья**


`В ядро наконец-то включили
memfd <https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=9183df2>`__,
о котором `вы уже могли слышать </content/memfd-в-ядре>`__. Интересно,
что это не только освободило дорогу для kdbus, но и позволит в ближайшее
время избавиться от очередного гуглевского велосипеда в ядре Android -
`ashmem <http://elinux.org/Android_Kernel_Features#ashmem>`__. Для
полной эмуляции ashmem пока не хватает pin/unpin-функциональности, но
возможно получится обойтись и без этого.

`David Herrmann <https://plus.google.com/+DavidHerrmann/about>`__ не
останавливается на уже сделанном и продолжает переписывать глубинные
подсистемы Linux, застрявшие в примитивном состоянии начала 1990х.

Следующее что он сделал, это `предложил реализацию системного вызова
revoke <http://thread.gmane.org/gmane.linux.kernel/1766888>`__,
доступного, например, в OpenBSD. Этот вызов `нам требуется для более
надежной работы systemd на многопользовательских
машинах </content/xorg-без-привилегий-суперпользователя>`__. Не секрет,
что у многих коллег-аналитиков опыт Linux не простирается дальше
администрирования локальной машины, и многие из них не в курсе проблем,
возникающих при работе нескольких сессий на одной машине, но на самом
деле это очень ценный вызов. Его ценность в том, что до сих пор не было
возможности отозвать у процесса в userspace прав доступа к устройствам.

Т.е. если один пользователь запустит X-сервер, а через некоторое время
будет подключен второй к тому же оборудованию, то первый будет иметь
полный доступ. Таковы были подходы к надежности и безопасности в 1980е
годы, когда проектировались Unix-системы. А теперь у первого
пользователя можно будет отобрать доступ с помощью revoke. Интересным
побочным эффектом нового системного вызова будут улучшения для
hotplug-устройств, которые не будут ожидать завершения userspace-команд
перед удалением из системы (сейчас устройство, даже после отключения,
находится в системе хотя и в состоянии "недоступно", пока не завершатся
userspace-операции). Неужели мы увидим рабочий *umount -f* ? Может и NFS
будет работать так, как ожидается начинающими, а не так, как описано в
разъяснениях особенностей поведения этой файловой системы?
Вообще, с этими архитектурными решениями писателей на перле из прошлого
века постоянно то смешно, то грустно. Например, `не так давно было
предложено завести persistent-буферы для каждой из консолей
ядра <http://thread.gmane.org/gmane.linux.kernel/1714779>`__. Так вот,
`выяснилось <http://thread.gmane.org/gmane.linux.kernel/1714779/focus=1715202>`__,
что среди участников коммьюнити Debian, есть такие чудаки, которые
`всерьез считают это
security-фичей <http://manpages.debian.org/cgi-bin/man.cgi?query=clear_console>`__.

`Разработчики systemd с удовольствием обсудили такой
подход <https://plus.google.com/+DavidHerrmann/posts/4bfZHBmeVQu>`__.

В systemd `появилась утилита для управления
сетью <https://plus.google.com/104232583922197692623/posts/TZsnEiDMn8Y>`__.

Пока, правда, управлять она не умеет, но уже может показывать.

Коллеги-аналитики `уже обсуждают на
OpenNET.ru <http://www.opennet.ru/opennews/art.shtml?num=40373>`__.

Инженер Red Hat, Dave Chinner, `в прошлом году ставший мэйнтейнером
файловой системы XFS </content/xfs-в-rhel-7>`__, серьезно ее
переработал. `Он прикрутил к ней sysfs-интерфейс и выделил общие с
userspace-приложениями
части <http://www.phoronix.com/scan.php?page=news_item&px=MTc2MTc>`__.

И напоследок, новость не относящаяся к Fedora напрямую, но касающаяся
одного из наших основных инструментов - `Git предложили перевести на
libcurl <http://thread.gmane.org/gmane.comp.version-control.git/255171>`__.

Это разом сократило 1200 строчек кода вокруг OpenSSL. Ситуация с
криптобиблиотеками в OSS-коммьюнити стабильно плохая (в основном из-за
человеческого фактора, конечно), так что отказ проекта от ориентации на
какую-то конкретную реализацию избавляет разработчиков от лишней
головной боли. Посмотрим, что будет дальше.

