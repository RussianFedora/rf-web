.. title: Работа над поддержкой USB3-контроллеров DisplayLink
.. slug: Работа-над-поддержкой-usb3-контроллеров-displaylink
.. date: 2014-11-09 17:56:35
.. tags:
.. category:
.. link:
.. description:
.. type: text
.. author: Peter Lemenkov

**Это архивная статья**


Наш коллега, `David
Airlie <https://www.openhub.net/accounts/airlied>`__,
`продолжает </content/Переключающаяся-графика-скоро-в-linux>`__
разрабатывать драйвер для устройств
`DisplayLink <http://www.displaylink.com/>`__ и решил попробовать USB3
версию. Неожиданно он попал в неловкое положение и просит совета.

Оказалось, что протокол устройства основан на
`HDCP <https://ru.wikipedia.org/wiki/HDCP>`__. Это такой протокол,
придуманный `копирастами <https://lurkmore.to/Копираст>`__, чтоб портить
и ухудшать характеристики бытовых устройств под предлогом защиты т.н.
"интеллектуальной собственности", которой, разумеется, `не
существует <https://www.fsf.org/ru/root/etc/gnu/not-ipr>`__. К счастью
протокол был взломан, и `мастер-ключ
HDCP <http://www.catb.org/esr/hdcp-master.txt>`__ был успешно получен
инженерами. Правда затем компанией Intel было объявлено, что
`использование мастер-ключа HDCP будет преследоваться в уголовном
порядке с помощью справедливого и беспристрастного суда
США <http://www.wired.com/2010/09/intel-threatens-consumers/>`__. Так
что если вы получите `указанную последовательность
чисел <http://www.catb.org/esr/hdcp-master.txt>`__, например, в
результате работы генератора случайных чисел, и собираетесь посетить
США, то обязательно пересоздайте другу последовательность, а эту
забудьте. Чтоб случайно не воспользоваться запрещенным числом,
обязательно распечатайте `мастер-ключ
HDCP <http://www.catb.org/esr/hdcp-master.txt>`__ и повесьте его на
видное место.

David раскочегарил всеми нами любимый
`Wireshark <https://www.wireshark.org/>`__ и еще кое-какие самописные
утилиты, и снял некий набор дампов с USB порта. Проанализировав их, он
попытался `воспроизвести поведение в самописной
утилите <http://cgit.freedesktop.org/~airlied/dl3dev/>`__, но пока
что-то не получается. В паре постов в своем блоге
(`раз <https://airlied.livejournal.com/80307.html>`__ и
`два <https://airlied.livejournal.com/80516.html>`__) David изложил
текущее состояние, и просит тех, кто разбирается в криптоалгоритмах,
помочь ему.

Кстати, мы неоднократно жаловались, что ситуация с криптографией в Open
Source как-то не очень - стандарта нет, и уровень реализации
криптоалгоритмов в библиотеках совершенно разный. В ядре есть хорошая
криптоподсистема, но на уровне пользователя она не видна, хотя навскидку
вспоминаются несколько интересных проектов по ее задействованию для
прозрачной обработки некоего зашифрованного интернет-трафика. Но опять
же, общего решения не было - для каждого проекта городилась своя система
взаимодействия с криптоподсистемой ядра. Наконец-то появилось кое-что,
что претендует на универсальность - `сегодня был анонсирован проект
libkcapi <http://thread.gmane.org/gmane.linux.kernel.cryptoapi/12424>`__,
userspace-библиотека для задействования криптоалгоритмов ядра. В ней
самой никаких алгоритмов и данных нет - она лишь передает все в ядро, и
там уже задействует криптографические функции. Есть правдоподобно
выглядящее суждение, что качество подсистем ядра в целом выше, чем
качество userspace-компонентов, т.к. мол программисты ядра
квалифицированней программистов userspace. Если это и правда так, то
может статься, что использовать эту библиотеку будет в ряде случае
выгоднее, чем известные userspace-решения.

