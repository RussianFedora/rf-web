.. title: GCC переходит на Git и другие новости.
.. slug: gcc-переходит-на-git-и-другие-новости
.. date: 2015-08-26 15:58:27
.. tags: gcc, git, subversion, vim, github, mercurial
.. category:
.. link:
.. description:
.. type: text
.. author: Peter Lemenkov

`Наконец-то, GCC начал переход на Git с Subversion
<https://thread.gmane.org/gmane.comp.gcc.devel/140753>`__! Вот этого реально
давно ждали!

Из других новостей - наш коллега, инженер Red Hat, `Carlos O'Donell
<https://plus.google.com/116746191356411907058>`__, `объявил о выходе Glibc
2.22 <https://thread.gmane.org/gmane.comp.lib.glibc.alpha/54439>`__ (уже
`перевели на русский <https://www.opennet.ru/opennews/art.shtml?num=42797>`__).
К сожалению, после прочтения анонса складывается впечатление, что после `Glibc
2.20 </content/Новости-systemdlinux-платформы>`__, где объявили о слиянии с
Eglibc (прощай, Eglibc, `нам будет не хватать веселья
</content/Очередной-отчет-о-статистике-по-вкладу-компаний-и-сообществ-в-ядро-linux>`__),
народ не очень желает "пиарить" процесс разработки. Непонятно, то ли subversion
являлся одной из характерных черт этого закрыто-открытого процесса, но ведь и
правда о новостях Glibc / GCC слышно как-то немного. На линукс-сайтах пишут по
результатам пресс-релизов, а на пульсе проекта руку никто вроде бы и не держит.
А новинок там навалом!

Мы периодическиш пишем о больших новинках базовых компонентов, например, `про
offloading в GCC </content/gcc-получил-поддержку-offloading>`__, но нашей
энергии хватает лишь на те новости, что прямо или косвенно касаются нас или
сделаны нашими коллегами. Этого, конечно, мало. Мы всегда призывали участников
других коммьюнити читать не только (микро)блоги, но и GitHub, списки рассылок,
баг-трекеры, IRC/XMPP-чаты разработчиков - там самая движуха и "эксклюзивные"
новости. Например, навскидку про Glibc / GCC за последние полгода:

- `Идет работа по включению в базовые утилиты поддержки архитектур с не-8битным
  байтом <https://thread.gmane.org/gmane.comp.gdb.patches/106980>`__
- `В GDB появилась поддержка контейнеров
  <https://thread.gmane.org/gmane.comp.gdb.patches/107000>`__
- `В GCC появились unit-тесты
  <https://thread.gmane.org/gmane.comp.gcc.patches/344304>`__
- `Обсуждается инициатива по добавлению в Glibc врапперов для всего API ядра
  <https://lwn.net/Articles/655028/#Comments>`__
- `GCC JIT стал в 5 раз быстрее
  <https://thread.gmane.org/gmane.comp.gnu.binutils/69948>`__
- `Из malloc в Glibc удаляли атомарные операции
  <https://thread.gmane.org/gmane.comp.lib.glibc.alpha/49099>`__
- `Постоянно ведется работа по увеличению соответствия Glibc стандартам
  <https://thread.gmane.org/gmane.comp.lib.glibc.alpha/50210>`__ (еще вопрос,
  какие конкурирующие открытые решения могут побить Glibc по количеству
  реализованных стандартов)
- `В Glibc заметно ускорялись базовые математические примитивы
  <https://developerblog.redhat.com/2015/01/02/improving-math-performance-in-glibc/>`__
- `Улучшается ситуация с потокобезопасным кодом в Glibc
  <https://developerblog.redhat.com/2015/01/28/recent-improvements-to-concurrent-code-in-glibc/>`__
  (мы `уже мельком упоминали о проводящейся работе
  </content/Потокобезопасность-и-glibc>`__)
- `В GCC 5 реализовано огромное количество оптимизаций времени сборки и
  линковки <http://hubicka.blogspot.com/2015/04/GCC5-IPA-LTO-news.html>`__

Вообще, несмотря на необходимую осторожность, количество изменений в базовые
компоненты не снижается, и в т.ч. в их инфраструктуру. Самым главным улучшением
является удобная VCS (т.е. Git) и тестирование. В GCC тесты уже включают, в
Glibc с тестированием не все так однозначно (например, `почитайте транскрипт
выступления нашего коллеги, бывшего инженера Red Hat, Roland McGrath
<https://lwn.net/Articles/634488/>`__). Одна из проблем тестирования базовых
компонентов, таких, как ядро или Libc, это то, что они слишком уж
низкоуровневые. Непросто не только написать юнит-тесты, но и тестировать
установленную копию. Изолироваться тут не получается, кроме как в виртуальной
машине. А там может быть непросто воспроизвести ситуацию, приводящую к ошибке
(но, кстати, тем ценнее инструкции по тому, как `тестировать с помощью
systemtap наживую <https://sourceware.org/glibc/wiki/Testing/WhiteBox>`__).

Ну и из изменений в Fedora - наконец-то `локали в Glibc будут упакованы
отдельно
<https://thread.gmane.org/gmane.linux.redhat.fedora.devel.announce/1554>`__
(померяйте размер */usr/lib/locale*, если кто-то сомневается, зачем это нужно).
Раньше для этого, как вариант, приходилось указывать флаги для rpm где-нибудь в
*/etc/rpm/macros.locales*.

Вторая новость, это `расставание Fedora с давно устаревшей библиотекой
librtkaio <https://thread.gmane.org/gmane.linux.redhat.fedora.devel/210690>`__.

И наконец, не совсем про базовые компоненты (хотя кому как) - `Vim тоже перешел
на GitHub
<https://groups.google.com/forum/#!msg/vim_announce/kC6yXmx6qJg/1WKQiYl4FwAJ>`__
(и на Git с Mercurial). Все-таки как хорошо, что `Google Code закрывается
</content/google-code-официально-закрывается>`__!

.. image:: /images/mercurial_user.png
   :align: center
   :width: 100.0%

.. class:: align-center

**Пользователь Mercurial недоволен переходом GCC на Git и отказом Vim
  от Mercurial**
