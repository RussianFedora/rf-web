.. title: "Че там у systemd"
.. slug: Че-там-у-systemd
.. date: 2015-06-24 10:50:27
.. tags: systemd, kdbus, kernel, debian, containers, criu, udisks
.. category:
.. link:
.. description:
.. type: text
.. author: Peter Lemenkov

В связи с `последними контейнерными
известиями </content/Великий-Открытый-Контейнерный-Стандарт>`__, еще
более интересными становятся новости о systemd.

Недавно `вышла довольно проходная версия
221 <https://thread.gmane.org/gmane.comp.sysutils.systemd.devel/33079>`__,
которую `коллеги-аналитики уже обсуждают на
Linux.org.ru <https://www.linux.org.ru/news/opensource/11722389>`__. В
это версии самым замечательным событием было объявление kdbus
обязательным компонентом, и стабилизация sd-bus. А вот в списке
разработчиков ядра уже сформировалась группа любителей юниксвэя,
недовольных kdbus. Хорошо, что их фантазии озвучивает `лишь один
человек <https://thread.gmane.org/gmane.linux.kernel/1981923>`__, и
особенно хорошо, что известный хулиган и матершинник, Linus Torvalds, `в
целом одобряет включение kdbus в
ядро <https://thread.gmane.org/gmane.linux.kernel/1981923/focus=1982561>`__,
не ведясь на театральные жесты этих ретроградов. Так что близится
очередная тактическая победа команды systemd, плавно перерастающая в
стратегическую, когда ПО будет переписываться с использованием новой
скоростной шины сообщений.

К сожалению, недовольство 221 версией не ограничилось только новой
шиной. Мэйнтейнеры Debian (да и видимо не только они) упорно продолжают
держаться за бессмысленную фичу "раздельного /usr", и `любая попытка
упростить конфигурацию <https://github.com/systemd/systemd/pull/293>`__
сталкивается с их недовольством, мол у пользователя забирают юниксвэйную
свободу выбора. Конкретно этот pull request привел к `картинным
заламываниям ручек в ленте Google+
проекта <https://plus.google.com/u/0/104232583922197692623/posts/WLNNacT6GC7>`__,
хотя дальше этого дело пока не пошло. Ничего, перебесятся. Отдельный
/usr все равно не работает.

Вернемся к kdbus, и sd-bus. Lennart Poettering `опубликовал введение в
sd-bus <http://0pointer.net/blog/the-new-sd-bus-api-of-systemd.html>`__,
где рассказал о том, как работать с новым API. Понятно, что
`использование sd-bus жестко привяжет ваш проект к современным
Linux-ядрам <https://lwn.net/Articles/648738/>`__, но плюсы могут
перевесить этот минус. В целом kdbus/sd-bus выглядит как еще один шаг
вперед, к унифицированной Linux-платформе.

Среди противников kdbus, кроме идеологически заряженных любителей
технологий из 1990х, есть и люди, которые не разобрались с областью
применимости самой концепции шины данных, и спрашивают о разнице между
kdbus и AF\_UNIX. Для них David Herrmann подготовил `кратенькое описание
основных
различий <https://dvdhrm.wordpress.com/2015/06/20/from-af_unix-to-kdbus/>`__.

Да, и о контейнерах. К сожалению, складывается впечатление, что Lennart
не очень понимает (и не ценит) задачу совместной работы нескольких
систем. Да, systemd довольно успешно и архитектурно грамотно выстаивает
контейнерное решение, но тем не менее, складывается впечатление наличия
каких-то барьеров в понимании проблематики распределенных систем.

Указать на какое-то конкретное доказательство этому не получится, но по
совокупности фактов складывается именно такое впечатление. Ну, вот,
например, недавно, `в systemd подняли тему о возможном включении
поддержки CRIU в
systemd-nspawn <https://github.com/systemd/systemd/issues/258>`__. Мы
неоднократно замечали интерес к именно такому потенциальному сценарию
использования, но, к сожалению, Lennart отказался оценить перспективы
этого решения, т.к. `мол CRIU не поддерживает 100% имеющегося
ПО <https://github.com/systemd/systemd/issues/258#issuecomment-112825756>`__.
Очень и очень печально, чего уж там.

Ну и напоследок, новость не о systemd, но о платформе systemd/Linux.
Наши коллеги, вместе с нашими друзьями из Canonical и Debian, недавно
представили `уже вторую официальную версию
storaged <https://thread.gmane.org/gmane.linux.redhat.fedora.devel/208289>`__,
демона, идущего на замену udisks2, но независимого от окружения GNOME и
полностью управляемого по D-Bus (kdbus / sd-bus). Стандартизация
стремительно наступает на юниксвэйную свободу выбора из нескольких
вариантов.
