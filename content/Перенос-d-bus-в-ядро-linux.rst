.. title: Перенос D-Bus в ядро Linux.
.. slug: Перенос-d-bus-в-ядро-linux
.. date: 2013-02-09 16:30:39
.. tags:
.. category:
.. link:
.. description:
.. type: text
.. author: Peter Lemenkov

**Это архивная статья**


Наконец-то началась `работа по долгожданному переносу шины сообщений
D-Bus в ядро Linux <http://www.kroah.com/log/linux/af_bus.html>`__.

Как известно, сейчас на десктопах под управлением Linux работают две
популярные шины сообщений - D-Bus и
`Binder <http://git.kernel.org/?p=linux/kernel/git/torvalds/linux.git;a=blob;f=drivers/staging/android/binder.c;hb=HEAD>`__
(используется в Linux-дистрибутиве "Android"). В целом, идея о
приложениях, связанных посредством некоей шины, обменивающихся
сообщениями и посылающим друг другу команды (т.е. не просто шина
сообщений, но и
`RPC <http://ru.wikipedia.org/wiki/Remote_Procedure_Call>`__), довольно
интересна, т.к. позволит изолировать приложения друг от друга. Раньше
еще использовали `DCOP <http://ru.wikipedia.org/wiki/DCOP>`__, от
которого отказались в пользу D-Bus, и как занятный курьез можно
упомянуть
`ICE <http://en.wikipedia.org/wiki/X_Window_System_protocols_and_architecture#Inter-client_communication>`__,
на базе которого и был построен DCOP, и который является частью
X-Window.

К сожалению, как D-Bus, так и Binder критиковали за огрехи в реализации,
но, в отличие от D-Bus, Binder **есть в ядре**, что позволяет
использовать его на самой ранней стадии и улучшает производительность.

Показательно, конечно, что самая массовая Linux-платформа, т.е. Android,
была вынуждена отказаться от D-Bus в том числе и из-за этого. Было
предпринято несколько попыток включить D-Bus в ядро, например, `в
сентябре 2010 <http://thread.gmane.org/gmane.linux.kernel/1040481>`__ (о
своей мотивации автор `подробно
рассказал <http://alban-apinc.blogspot.ru/2011/12/d-bus-in-kernel-faster.html>`__),
но пока без особого успеха. В качестве побочного проекта было решено
улучшить UNIX-сокеты, добавив multicast и фильтрование сообщений (одна
из последних попыток была предпринята в `феврале
2012 <http://thread.gmane.org/gmane.linux.kernel/1255575>`__).

Российские Linux-аналитики до сих пор высказывались по поводу проекта с
кодовым названием KDBUS сдержанно - `ключевыми словами пока являются
"ненужно" и "решето" <http://www.linux.org.ru/news/kernel/5342071>`__.

Удивительно, но альянс `GENIVI <http://www.genivi.org/>`__
проигнорировал замечания экспертов русскоязычного сообщества и принял
новинку с большим энтузиазмом, `встроив его в свою
платформу <http://thread.gmane.org/gmane.linux.kernel/1320740>`__.

И вот, за дело наконец-то взялся `Greg
Kroah-Hartman <https://www.ohloh.net/accounts/gregkh>`__. Он сообщил,
что работает над совершенно новой реализацией шины сообщений в ядре,
пока комментаторами названной DBUS 2.0, на базе которой можно будет
реализовать и D-Bus, и Binder. Она будет отличаться и от уже
существующих реализаций AF\_DBUS/AF\_BUS-сокетов, так и от Binder. Его
начинание уже вызвало положительные отклики от инженеров Google,
работающих над Binder, и от команды разработчиков systemd, которые уже
планируют включить поддержку новых возможностей ядра. Для
legacy-приложений, использующих D-Bus, будет создана библиотека libdbus,
для обеспечения совместимости. Само собой, это никак не будет совместимо
с устаревшими Unix-системами.

