.. title: OverlayFS включают в ядро
.. slug: overlayfs-включают-в-ядро
.. date: 2014-10-24 17:54:53
.. tags:
.. category:
.. link:
.. description:
.. type: text
.. author: Peter Lemenkov

**Это архивная статья**


Наконец-то, после 25й (!) итерации, `OverlayFS включили в дерево
vfs.git <https://thread.gmane.org/gmane.linux.file-systems.union/23/focus=25>`__.

Еще пара-тройка шагов, и его включат в официальный Git-репозиторий
Торвальдса.

OverlayFS, это результат более чем четырехлетней разработки Miklos
Szeredi, разработчика
`FUSE <https://ru.wikipedia.org/wiki/Filesystem_in_Userspace>`__. Целью
проекта является создание "многослойной" файловой системы, объединяющей
другие файловые системы в одну, и предоставляющей возможность "форка"
полученной системы. Одним из приложений этой функциональности были
LiveCD, которые таким образом планировали предоставлять возможность
прозрачного доступа к системе на чтение-запись. Еще вариантом
использования была функциональность "factory reset" в embedded-системах
(телефоны, роутеры, медиаплейеры), когда основная система никогда не
изменялась, а настройки велись в union-fs. С развитием облачных
технологий появилось еще одно применение - большая часть облачных систем
идентична, и хочется эту общую часть разделять между сотнями и тысячами
контейнеров в хостовой системе одновременно позволяя всем
контейнеризированным приложениям ее изменять, если нужно.

Существовало несколько реализаций Union-FS в разных системах (хороший
обзор был сделан `Valerie
Aurora <https://en.wikipedia.org/wiki/Valerie_Aurora>`__ на LWN.net -
`первая часть <https://lwn.net/Articles/325369/>`__ и `вторая
часть <https://lwn.net/Articles/327738/>`__), но в Linux ни одна из
реализаций не добралась до ванильного ядра. Причин тому много -
архитектурная усложненность, низкое качество кода, [STRIKEOUT:высокий
уровень ненависти в рассылке ядра] социально-личностные проблемы. Ближе
всех к ядру подобралась было AuFS, и ее даже поспешно включили в ряд
Debian-based дистрибутивов. Но быстро выяснилось, что это было ошибкой,
т.к. `система оказалась чрезвычайно сложной, хрупкой, и бесперспективной
для включения в
ядро <https://thread.gmane.org/gmane.linux.ubuntu.devel/34927/focus=34955>`__.

Но ущерб поспешными действиями мэйнтейнеров был нанесен - разработчики
Docker, по наивности полагаясь на возможности, присутствовавшие в самом
популярном Linux-дистрибутиве, решили базироваться на aufs. Непонятно,
почему они не проконсультировались с нашими коллегами, которые бы
наверняка подсказали более рациональное решение. Так или иначе, когда `у
Red Hat появился интерес к Docker </content/red-hat-и-docker>`__, то
`наши коллеги протянули руку помощи зашедшему в архитектурный тупик
проекту </content/Облачные-новости>`__, переведя его на Device Mapper.

История OverlayFS началась давно, и по сравнению с другими вариантами,
система выглядела очень простой. Мэйнтейнеры ядра, придерживаясь их
неповторимого стиля общения в списке рассылки ядра, отозвались о
патчсете окрыляюще для начинающих - Andrew Morton сказал, что `ему проще
не принимать
его <https://thread.gmane.org/gmane.linux.file-systems/54682/focus=54959>`__,
а на последовавшее предложение перенести функционал в FUSE-модуль в
userspace, Linus Torvalds, в присутствии разработчика userspace-файловых
систем, высказался, что `люди, разрабатывающие файловые системы в
userspace просто
заблуждаются <https://thread.gmane.org/gmane.linux.file-systems/54682/focus=54983>`__.

Получив свою дозу мотиваторов, Miklos за три года совершил еще две
дюжины попыток, и наконец-то пробился!
Одним из первых пользователей OverlayFS были разработчики OpenWRT, и
недаром - factory reset и откат при аварии обновления для них является
обязательной фичей. Как вы знаете, атомарное, консистентное,
изолированное и надежное обновление системы в рамках старой
Linux-архитектуры сейчас в общем случае невозможно. Особенно сложно
добиться хотя бы частичного удовлетворения
`ACID <https://ru.wikipedia.org/wiki/ACID>`__, если использовать не RPM,
а один из нестандартных самодельных пакетных менеджеров (некоторые из
них довольно популярны, и их примитивность и малофункциональность порой
видится их наивными пользователями как преимущество перед сложным RPM).

Наши коллеги работают над надежными апдейтами довольно давно -
`offline-апдейты </content/Одобрены-новые-фичи-fedora-18>`__, `перенос
всего в
/usr </content/Приветствуем-изменения-иерархии-файловой-системы-в-archlinux>`__,
`использование btrfs </content/Новости-linux-платформы>`__,
`контейнеризация и изоляция
приложений </content/Короткие-новости-о-контейнерах-и-виртуализации>`__,
`инициатива Fedora Atomic </content/Короткие-новости-24>`__, и многое
другое. До чего-то работающего еще пока, к сожалению, довольно далеко.

