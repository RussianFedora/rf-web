.. title: Вышел OpenStack Kilo и другие новости
.. slug: Вышел-openstack-kilo-и-другие-новости
.. date: 2015-05-04 19:25:49
.. tags: openstack, mirantis, redhat, golang, dds, ricon, seagate, kinetic, ceph, gluster, posix, 
.. category: статистика
.. link:
.. description:
.. type: text
.. author: Peter Lemenkov

**Это архивная статья**

`Официально объявлено о выходе OpenStack
Kilo <https://www.openstack.org/software/kilo/press-release>`__, уже
одинадцатой версии OpenStack. Пресс-релиз уже перевели на русский и
`обсуждают на
OpenNET.ru <https://www.opennet.ru/opennews/art.shtml?num=42150>`__.

Одновременно опубликовали и радующую глаз статистику по разработчикам
этой версии OpenStack. Как и всегда радуемся успехам наших
соотечественников из Mirantis, и ведущей роли наших коллег из Red Hat.

.. |image0| image:: https://bitergia.files.wordpress.com/2015/04/companies-contributions.png
   :align: center
   :target: http://blog.bitergia.com/2015/04/30/kilo-the-new-openstack-release/

Из интересных новостей стоит отметить инициативу группы разработчиков OpenStack
по `переписыванию компонентов Swift на golang
<https://thread.gmane.org/gmane.comp.cloud.openstack.devel/52553>`__.
Теоретически это должно повысить производительность, а как оно реально
получится - посмотрим.

Вообще, в последнее время за подсистемы хранения данных взялись
серьезно. Идея о том, чтоб из "рассыпухи" серверов собрать
отказоустойчивое хранилище данных (необязательно файлов, можно и
оперировать данными на уровне приложений, целыми объектами), оказалась
не только заманчивой, но и вполне реализуемой. Проблема в том, что не
только сетевые задержки превосходят задержки при работе с
`грампластинками </content/История-xfs-и-будущее-фс-в-целом>`__, но и
демоны, обеспечивающие работоспособность системы в целом, тупят и
тормозят. Неудивительно, что есть желание переписать отдельные
компоненты на более шустром компилируемом современном языке, который бы
предоставлял возможности интерпретируемых. Но даже если и не перепишут,
то уже достигнутый результат уже нарушает сон представителей
проприетарных компаний (да,
`NetApp <http://storagemojo.com/2015/04/13/how-doomed-is-netapp/>`__,
пора
`перестраиваться </content/paypal-отказывается-от-vmware-в-пользу-openstack-теперь-уже-всерьез>`__,
иначе события пойдут по плохому сценарию). А вот кое кто быстро
перестраивается. Например Seagate, традиционный участник RICON, который
обещает вскоре открыть `Kinetic Storage
platform <https://www.theregister.co.uk/2015/04/24/seagate_to_opensource_kinetics_at_openstack_summit/>`__,
свое решение для облачного хранилища объектов. Это очередной уровень
абстракции - хранить не файлики, а сразу готовые объекты уровня
бизнес-логики. Seagate собирается запрыгнуть в этот поезд, чтобы по
праву архитектора подсистемы устанавливать стандарты и технические
требования, обеспечивая своим продажникам преимущество.

У Red Hat, само собой, есть хорошее портфолио решений для облачных
хранилищ. К сожалению, из-за того, что тема только пошла, варианты
перехлестываются (Ceph vs. Gluster). Это очень плохо, т.к. создает
вредный юниксвэй из вариантов, и решения по которому заказчики принимать
не хотят. К счастью, в марте этого года `Red Hat предложило свое
архитектурное
видение <http://www.businesswire.com/news/home/20150324005292/en/Red-Hat-Unveils-Unified-Open-Software-Defined-Storage>`__,
где четко разграничило сферы применения. Берите Gluster для
использования в Enterprise Virtualization, аналитических задачах, и для
разделения и синхронизации данных уровня Enterprise. А [STRIKEOUT:если
вы не зарабатываете деньги] для OpenStack и AWS берите Ceph. Для
хранения архивных данных используйте любой вариант из этих двух.

Оба проекта до сих пор на стадии "work-in-progress", но нужно отметить,
что Gluster начали пораньше, и фич в нем больше - лучше
производительность на малых файлах, интеграция с SELinux, развитый
фреймворк для управления. Ceph пока застрял на POSIX-интерфейсе
(CephFS).

`Напомним </content/Поздравляем-openstack-с-третьей-годовщиной>`__
мнение инженера Seagate, James Hughes, который на RICON 2013 сказал, что
*"Any distributed filesystem like GlusterFS or Ceph that tries to
preserve the POSIX API will go the way of the dodo bird"*. Может и не
стоить тащить этот POSIX? Но хозяин-барин, конечно.

Для справки, основной проблемой POSIX, `архитектурно подразумевающей
существование в системе некоего
синглтона <https://en.wikipedia.org/wiki/File_locking>`__, эффективно
упорядочивающего операции над FS самим своим существованием, является
то, что это резко усложняет масштабируемость. Если кто не верит, то
задайтесь вопросом, как получив файловый дескриптор, узнать по нему, не
изменилось ли содержимое файла с момента открытия и `как предохраниться
от неожиданных
изменений <http://0pointer.de/blog/projects/locking.html>`__?
Рекомендуем дальше поинтересоваться тонкостями на любой из конференций,
где будут наши коллеги, например, на том же FOSDEM. К сожалению, мы на
айти-мероприятиях в России, часто встречались со свежей мыслью, что
разработчики должны во что бы то ни стало следовать стандартам из
1970x-1990x (X11, SysV, POSIX, файловый API для всего - от конфигураций
до хранения данных, текстовички и текстовые протоколы, т.к. `"читать
глазами" </content/Бинарные-логи-и-один-интересный-аспект>`__ кококо,
пайпы и т.п.). Это лишь показывает невысокий уровень знакомства с
открытыми системами у ряда коллег-аналитиков. Кстати,
Embedded-разработчики вышли из положения до тупости просто - скидывать
файлы на телефон или аудиоплэйер можно лишь через спецпротокол
(несоответствующий POSIX), либо переключив его в режим флэшки (отдав
проблемы на откуп хостовой системе). А представьте, что Vkontakte или
Twitter лочили бы всю систему, когда кто-нибудь постил фоточку. К
счастью, социальные сети построены не на POSIX-стандарте, и поэтому они
быстро и хорошо работают.

Вернемся к Ceph. Несоответствие (или неполное соответствие) POSIX, это,
как полагает ряд экспертов, не такая уж и проблема. А вот `отсутствие
fsck <http://ceph.com/docs/master/cephfs/>`__ - это уже стоп-слово.

.. image:: https://pbs.twimg.com/media/Bx2AO-JCMAIcuHb.jpg
   :align: center

**Играл с клубком, забыл stop word**
