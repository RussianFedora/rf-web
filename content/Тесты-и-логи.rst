.. title: Тесты и логи
.. slug: Тесты-и-логи
.. date: 2014-07-15 16:11:35
.. tags:
.. category:
.. link:
.. description:
.. type: text
.. author: Peter Lemenkov

**Это архивная статья**


Наши участники большое значение придают тестированию. Это удивительно,
но именно этим нас пытаются порой оскорбить, мол мы, это бесплатные
бета-тестеры. Ну давно понятно, что в некоторых других коммьюнити ничего
не тестируют, считая это позорным и глупым занятием, вываливая
`субоптимальный код <http://govnokod.ru/>`__, порой даже и неработающий
толком. Мы, само собой, [STRIKEOUT:делаем все правильно] стараемся
делать все правильно, хоть и не всегда получается, и тестирование, это
важная и нужная часть процесса (от индивидуального тестирования, до
тестовых дней).

Для тестирования нужны, как минимум, тестовый фреймворк и система
журналирования. Непонимание того, что результаты куда-то надо
записывать, привело к подзатухшему на текущий момент [STRIKEOUT:срачу]
конструктивному обсуждению т.н. `"бинарных
логов" <https://www.google.com/search?q=site%3Alinux.org.ru+бинарные+логи>`__,
но это в целом безопасно. Гораздо хуже, что многие (и многие из нас,
само собой) не используют или не умеют использовать тестовые пакеты.

Что интересно, один из мощнейших тестовых тулкитов, SystemTap, написан в
основном нашими коллегами. Весной `была выпущена версия
2.5 <http://thread.gmane.org/gmane.linux.systemtap/22296>`__, в которой
добавили поддержку UEFI/SecureBoot (уже обсудили на
`Linux.org.ru <https://www.linux.org.ru/news/opensource/10454975>`__).

Если вы не пользовались им до сих пор, то попробуйте - к нему идет
`довольно много документации <https://sourceware.org/systemtap/wiki>`__,
в т.ч. `самого базового
уровня <https://sourceware.org/systemtap//SystemTap_Beginners_Guide.pdf>`__.

Несмотря на наличие таких мощных средств отладки, предоставляемых
пакетом SystemTap, наши коллеги нередко прибегают к самодельным, простым
решениям. Благодаря им возникают забавные ситуации. Например, Andrew
Phaley, инженер Red Hat, `рассказал
историю <http://developerblog.redhat.com/2014/06/24/ultra-lightweight-high-precision-logger-for-openjdk/>`__,
как он из веревок и палок смастерил функцию-логгер для OpenJDK, которая
отрабатывает за 5-20 раз быстрее, чем в случае использования стандартных
средств. Ему это было нужно для измерения суб-миллисекундных интервалов
внутри OpenJDK, что в свою очередь требовалось для установления причин
регрессии в одной из библиотечных функций. Добился он этого благодаря
отказу от потокобезопасности и благодаря использованию особенностей
микропроцессора Intel в его рабочей машине. Понятно, что по сочетанию
этих двух факторов, не стоит и даже думать о включении функции в
OpenJDK, но его подход может быть интересен для разработчиков.

Не секрет, что некоторые разработчики неохотно и с опаской берутся за
отладку библиотечных функций, и данный пример показывает, что и без
SystemTap ничего особенно удивительного в пересборке базового компонента
нет. Еще стоит отметить, что знание особенностей современных
микропроцессоров может запросто оказаться заметным плюсом. Не забывайте
ассемблер, коллеги!
