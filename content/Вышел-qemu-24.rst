.. title: Вышел Qemu 2.4
.. slug: Вышел-qemu-24
.. date: 2015-08-12 13:28:44
.. tags:
.. category:
.. link:
.. description:
.. type: text
.. author: Peter Lemenkov

**Это архивная статья**


Наконец-то `вышел Qemu
2.4 <http://thread.gmane.org/gmane.comp.emulators.qemu/355495>`__. В
`большом списке изменений <http://wiki.qemu.org/ChangeLog/2.4>`__
хотелось бы выделить поддержку VirtIO GPU, `разработанного нашим
коллегой David
Airlie <http://thread.gmane.org/gmane.linux.kernel.virtualization/25063>`__,
горячее удаление памяти, улучшение в зеркалировании блочных устройств.

`Одновременно выпустили багфикс-релиз Qemu
2.3.1 <http://thread.gmane.org/gmane.comp.emulators.qemu/355494>`__.

Вообще, несмотря на взрывной рост интереса к контейнерам, отметим, что
старый конь борозды не испортит. Учитывая `пока что нерешенные проблемы
с безопасностью контейнеров </content/Безопасность-docker-будущее>`__,
особенно `в маргинальных дистрибутивах, без
SELinux </content/docker-и-selinux>`__, у виртуализации будет своя ниша.

Конечно, конкуренция решений тут лишь обостряется. Большие игроки
медленно решаются что-то менять, но если решаются, то бесповоротно. Вы
уже могли слышать, что пару месяцев назад `Linode решил уйти с Xen на
KVM <https://blog.linode.com/2015/06/16/linode-turns-12-heres-some-kvm/comment-page-1/>`__
(причем, отметьте, они утверждают, что KVM-виртуалки *заметно* быстрее
Xen-виртуалок), но `впереди еще миграция еще больших размеров, которую
мы пока что ждем </content/Новости-виртуализации>`__.

Итак, виртуализация не собирается уходить, и уже понятно, что завоевала
некую стабильную долю среди всех решений. Де-факто стандартом для
новинок становится Qemu, на котором смело экспериментируют. Например,
Intel уже несколько месяцев, как `анонсировала проект Clear
Containers <https://lwn.net/Articles/644675/>`__, в рамках которого
ведется научно-исследовательская работа по оптимизации виртуальной
машины с Linux-системой для запуска контейнеров. Они обнаружили
неисследованное поле для оптимизации - загрузка и инициализация
виртуальной машины. Т.к. Qemu декларирует поддержку операционных систем
в общем случае, то по умолчанию загрузка виртуалки не сильно отличается
от загрузки персоналки с Windows 95. Тот же 16-битный BIOS вместо UEFI,
те же процедуры инициализации. А почему бы не изменить эту часть,
выбросив поддержку операционных систем из 1980х и 1990х годов? После
`экспериментов <https://github.com/bonzini/qboot>`__ с пересборкой Qemu
и разработкой специального firmware, `Paolo
Bonzini <https://www.openhub.net/accounts/bonzini>`__ официально объявил
о выходе
`qboot <http://thread.gmane.org/gmane.comp.emulators.kvm.devel/136158>`__,
специальном firmware и инструкции для пересборки Qemu, позволявшим
запустить исполнение виртуальной машины через 40 миллисекунд, вместо
обычных 500-700. Дальше, конечно, время тратится на запуск ядра, initrd,
init-процесс, но полсекунды сэкономить получилось!
Анонс qboot вызвал оживленное обсуждение. Понятно, что кое-чего при
таких результатах еще нет, да и Paolo признался, что разработал прототип
за 24 часа, и понятно, что SeaBIOS можно тоже подсушить, но 200
миллисекунд в SeaBIOS против 20 в qboot, это заметная разница. Можно
ожидать, что qboot как таковый, использоваться будет незначительно - уж
слишком это изменение инвазивно со своим требованием пересборки Qemu, но
определенно стоит ожидать оптимизаций в SeaBIOS и возможно в Coreboot.

